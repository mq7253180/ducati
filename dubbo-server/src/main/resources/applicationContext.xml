<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" default-lazy-init="true" 
	xmlns="http://www.springframework.org/schema/beans" 
	xmlns:context="http://www.springframework.org/schema/context" 
	xmlns:aop="http://www.springframework.org/schema/aop" 
	xmlns:tx="http://www.springframework.org/schema/tx" 
	xmlns:mvc="http://www.springframework.org/schema/mvc" 
	xmlns:dubbo="http://code.alibabatech.com/schema/dubbo" 
	xmlns:jpa="http://www.springframework.org/schema/data/jpa" 
	xsi:schemaLocation="
	http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans-4.3.xsd 
	http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context-4.3.xsd 
	http://www.springframework.org/schema/aop http://www.springframework.org/schema/aop/spring-aop-4.3.xsd 
	http://www.springframework.org/schema/tx http://www.springframework.org/schema/tx/spring-tx-4.3.xsd 
	http://www.springframework.org/schema/mvc http://www.springframework.org/schema/mvc/spring-mvc-4.3.xsd 
	http://www.springframework.org/schema/data/jpa http://www.springframework.org/schema/data/jpa/spring-jpa.xsd
">
	<import resource="classpath*:applicationContext-*.xml" />
	<aop:aspectj-autoproxy/>
	<context:component-scan base-package="com">
		<context:exclude-filter expression="org.springframework.stereotype.Controller" type="annotation"/>   
	</context:component-scan>
	<!-- 如果配置了component-scan可以不配置 annotation-config, 提供了两个子标签include-filter和exclude-filter-->
	<!-- context:annotation-config /-->
	
	<bean id="dataSourceTransactionManager" class="org.springframework.jdbc.datasource.DataSourceTransactionManager">
		<property name="dataSource" ref="dataSource"/>
	</bean>
	<!-- <bean id="bbtTransactionTemplate" class="org.springframework.transaction.support.TransactionTemplate">
        <property name="transactionManager">
            <ref bean="dataSourceTransactionManager"/>
        </property>
    </bean> -->
	<tx:annotation-driven transaction-manager="dataSourceTransactionManager" proxy-target-class="true"/>
	<jpa:repositories base-package="com.quincy.sdk.dao" entity-manager-factory-ref="entityManagerFactory" transaction-manager-ref="dataSourceTransactionManager" repository-impl-postfix="Impl" />
	<bean id="mybatisSqlSessionFactoryBean" class="org.mybatis.spring.SqlSessionFactoryBean">
        <property name="dataSource" ref="dynamicDataSource"/>
        <property name="configLocation" value="classpath*:mybatis.xml"/>
        <property name="mapperLocations">
        	<array>
                <value>classpath*:mybatis/*.xml</value>
            </array>
        </property>
    </bean>
    <bean id="mybatisMapperScannerConfigurer" class="org.mybatis.spring.mapper.MapperScannerConfigurer">
        <property name="sqlSessionFactoryBeanName" value="mybatisSqlSessionFactoryBean"/>
        <property name="basePackage" value="com.hce.ducati.mapper"/>
    </bean>
    <bean id="entityManagerFactory" class="org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean">
		<!-- <property name="persistenceUnitName" value="zUnit" /> -->
		<property name="dataSource" ref="dataSource" />
		<property name="packagesToScan" value="com.quincy.sdk.entity" />
		<property name="persistenceProvider">
			<bean class="org.hibernate.jpa.HibernatePersistenceProvider"/>
		</property>
		<property name="jpaVendorAdapter">
			<bean class="org.springframework.orm.jpa.vendor.HibernateJpaVendorAdapter">
				<property name="generateDdl" value="false" />
				<property name="database" value="MYSQL" />
				<property name="databasePlatform" value="org.hibernate.dialect.MySQL5InnoDBDialect" />
				<property name="showSql" value="true" />
			</bean>
		</property>
		<!-- <property name="jpaDialect">
			<bean class="org.springframework.orm.jpa.vendor.HibernateJpaDialect" />
		</property> -->
		<!-- <property name="jpaPropertyMap">
			<map>
				<entry key="hibernate.query.substitutions" value="true 1, false 0" />
				<entry key="hibernate.default_batch_fetch_size" value="16" />
				<entry key="hibernate.max_fetch_depth" value="2" />
				<entry key="hibernate.generate_statistics" value="true" />
				<entry key="hibernate.bytecode.use_reflection_optimizer" value="true" />
				<entry key="hibernate.cache.use_second_level_cache" value="false" />
				<entry key="hibernate.cache.use_query_cache" value="false" />
			</map>
		</property> -->
	</bean>
</beans>