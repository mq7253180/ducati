<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.hce.ducati.mapper.UserMapper" >
	<resultMap id="userResultMap" type="com.quincy.sdk.o.User">
		<result column="id" property="id" jdbcType="INTEGER" />
		<result column="jsessionid" property="jsessionid" jdbcType="VARCHAR" />
	</resultMap>
	<resultMap id="oauth2Dto" type="com.hce.ducati.o.OAuth2DTO">
		<result column="client_name" property="clientName" jdbcType="VARCHAR" />
		<result column="code" property="authCode" jdbcType="VARCHAR" />
		<result column="username" property="username" jdbcType="VARCHAR" />
		<result column="uname" property="uName" jdbcType="VARCHAR" />
		<result column="email" property="email" jdbcType="VARCHAR" />
		<result column="mobile_phone" property="mobilePhone" jdbcType="VARCHAR" />
	</resultMap>
	<update id="updateLastLogined">
		UPDATE s_user 
		<set>
			jsessionid = #{jsessionid, jdbcType=VARCHAR},
			last_logined = NOW()
		</set>
		WHERE id=#{id, jdbcType=INTEGER}
	</update>
	<select id="findUsers" resultMap="userResultMap">
		SELECT u.* FROM s_user u INNER JOIN s_role_user_rel r ON u.id=r.user_id WHERE r.role_id=#{roleId, jdbcType=INTEGER}
	</select>
	<select id="findOAuth2ById" resultMap="oauth2Dto">
		SELECT s.name AS client_name,o.code,u.username,u.name AS uname,u.email,u.mobile_phone 
		FROM s_oauth2_code o 
		INNER JOIN s_client_system s ON o.client_system_id=s.id 
		INNER JOIN s_user u ON o.user_id=u.id 
		WHERE o.id=#{id, jdbcType=INTEGER}
	</select>
</mapper>
